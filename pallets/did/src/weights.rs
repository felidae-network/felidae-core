
//! Autogenerated weights for `pallet_did`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-21, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `kali`, CPU: `Intel(R) Core(TM) i7-10870H CPU @ 2.20GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/felidae-node
// benchmark
// pallet
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_did
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions needed for felidae_pallet_transaction.
pub trait WeightInfo {
	fn add_attribute() -> Weight;
	fn update_attribute() -> Weight;
	fn read_attribute() -> Weight;
	fn remove_attribute() -> Weight;
}

/// Weight functions for `pallet_did`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: DidModule AttributeStore (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: DidModule OwnerStore (r:0 w:1)
	fn add_attribute() -> Weight {
		Weight::from_ref_time(33_836_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: DidModule OwnerStore (r:1 w:0)
	// Storage: DidModule AttributeStore (r:1 w:1)
	fn update_attribute() -> Weight {
		Weight::from_ref_time(38_987_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: DidModule AttributeStore (r:1 w:0)
	fn read_attribute() -> Weight {
		Weight::from_ref_time(29_938_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
	}
	// Storage: DidModule OwnerStore (r:1 w:0)
	// Storage: DidModule AttributeStore (r:1 w:1)
	fn remove_attribute() -> Weight {
		Weight::from_ref_time(33_626_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}